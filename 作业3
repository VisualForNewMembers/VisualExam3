#define _CRT_SECUPE_NO_WAPNINGS
#include<stdio.h>
#include<stdlib.h>
#include<graphics.h>       //图形插件 
#include<conio.h>        //getch()头文件 
int count=50;
//地图设计
int map[13][13]=
{
	0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,16,1,9,8,9,1,1,1,1,1,1,0,
	0,0,0,0,0,0,0,0,0,0,0,1,0,
	0,6,1,1,2,1,0,0,1,1,1,1,0,
	0,1,11,1,0,1,0,0,13,2,0,1,0,
	0,0,2,0,0,1,2,10,18,10,0,1,0,
	0,4,1,1,0,1,0,0,0,0,0,1,0,
	0,1,11,1,0,1,0,0,0,0,0,1,0,
	0,0,2,0,0,1,1,0,0,0,0,1,0,
	0,1,1,1,0,0,2,0,0,0,0,0,0,
	0,6,1,4,0,4,1,4,0,1,10,1,0,
	0,6,1,4,0,1,15,1,0,9,7,9,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0
 } ;
 int map2[13][13]=
{
	0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,16,1,9,8,9,1,1,1,1,1,1,0,
	0,0,0,0,0,10,10,0,0,0,0,1,0,
	0,6,1,1,2,1,0,0,1,1,1,1,0,
	0,1,18,1,0,1,0,0,12,2,0,1,0,
	0,0,2,0,0,1,2,10,18,10,0,1,0,
	0,4,1,1,0,1,0,0,0,0,0,1,0,
	0,1,11,1,0,1,0,0,0,0,0,1,0,
	0,0,2,0,0,1,1,0,0,11,0,1,0,
	0,1,1,1,0,0,2,0,0,0,0,0,0,
	0,6,1,4,0,4,1,4,0,1,10,1,0,
	0,6,1,4,0,1,15,1,0,9,7,9,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0
 } ;
 //角色信息 
 struct gamerole
 {
 	char rolename[20];
 	int blood;
 	int blue quantity;
 	int defense;
 	int attack;
 	int bluekey;
 	int yellowkey;
 	int grade;
 	int experience;
 }role;
//创建一个全局角色
struct moster
{
	int blood;
	int attack;
	int defense;
	int experience;
 } ;
struct moster bat={50,10,9,55};
struct monter master={70,20,10,70};
struct moster kulou={80,25,11,80};
IMAGE img[19],roleInfo;
HWND hwnd;      //用来显示战斗时候一个消息框
//输入用户名 初始化用户信息
void inputRoleName()
{
	printf("Input role name:");
	scanf("%s",role.rolename );
	role.attack =30;
	role.defense =20;
	role.grade =1;
	role.yellowkey =0;
	role.bluekey =0;
	role.quantity =250;
	role.blood =100;
	role.experience =0;
 } 
 //加载资源：批量加载
void loadResource()
{
   //初始化存储资源的变量
   loadimage(&roleInfo,"info.ipg");
   for(int i=0;i<19;i++)
   {
	char fileName=[20]="";
	sprintf(fileName,"%d.jpg",i);
	//60*60固定尺寸
	loadimge(img+i,fileName,60,60); 
	} 
} 
 //把整形转换为字符串：类型转换
char str[20]="";
char *intToWcahr(int xNum)
{
    sprintf(str,"%d",xNum);
	return str;	 
} 
void drawMap()
{
	int i,j,x,y;
	for(i=0;i<13;i++)
	{
		for(j=0;j<13;j++)
		{
			x=60*j;
			y=60*i;
		//img[0-18]   图片编号0-18 map[i][j] 0-18;
		putimage(x,y,&img[map[i][j]]); 
		}
	}
	putimage(60*13,0,&roleInfo);
	outtextxy(60*13+12,100,role.rolename );
	 
	//等级处理 
	role.grade =role.experience /count;
	role.experience =role.experience %count;
	count=count*role.grade ; 
	
	outtextxy(60*13+12,180,intToWcahr(role.grade ));
	outtextxy(60*13+12,235,intToWcahr(role.experience ));
	outtextxy(60*13+12,362,intToWcahr(role.blood );
	outtextxy(60*13+12,415,intToWcahr(role.quantity ));
	outtextxy(60*13+12,517,intToWcahr(role.attack ));
	outtextxy(60*13+12,567,intToWcahr(role.defense ));
	outtextxy(60*13+12,689,intToWcahr(role.yellowkey ));
	outtextxy(60*13+12,759,intToWcahr(role.bluekey ));
}
void drawMap2()
{
	int i,j,x,y;
	for(i=0;i<13;i++)
	{
		for(j=0;j<13;j++)
		{
			x=60*j;
			y=60*i;
		//img[0-18]   图片编号0-18 map[i][j] 0-18;
		putimage(x,y,&img[map2[i][j]]); 
		}
	}
	putimage(60*13,0,&roleInfo);
	outtextxy(60*13+12,100,role.rolename );
	 
	//等级处理 
	role.grade =role.experience /count;
	role.experience =role.experience %count;
	count=count*role.grade ; 
	
	outtextxy(60*13+12,180,intToWcahr(role.grade ));
	outtextxy(60*13+12,235,intToWcahr(role.experience ));
	outtextxy(60*13+12,362,intToWcahr(role.blood );
	outtextxy(60*13+12,415,intToWcahr(role.quantity ));
	outtextxy(60*13+12,517,intToWcahr(role.attack ));
	outtextxy(60*13+12,567,intToWcahr(role.defense ));
	outtextxy(60*13+12,689,intToWcahr(role.yellowkey ));
	outtextxy(60*13+12,759,intToWcahr(role.bluekey ));
}
bool bloodPK(struct moster guaiwu)
{
	//PK确定可玩性
	role.blood -=(guaiwu.blood+guaiwu.defense*rand()%2+guaiwu.attack*rand()%2);
	if(role.blood <=0)
	  return false;
	else
	{
	  role.experience +=guaiwu.experience;
	  return true;	
	}   
}
void keyDown()
{
	char userKey;
	int i=0,j=0;
	for(i=0;i<13;i++)
	{
		for(j=0;j<13;j++)
		{
			if(map[i][j]==15)
			break;
		}
		if(map[i][j]==15)
		break;
	}
	userKey=_getch();    //不可见输入 
	switch(userKey)
	{
		//左
		case'A':
		case'a':
		case 75:
		//要走的地方是空地可走
		if(map[i][j-1]==1)
		{
			map[i][j]=1;
			map[i][j-1]=15; 
		 } 
		 //蓝钥匙 
		else if(map[i][j-1]==4)
		{
			map[i][j-1]=15;
			map[i][j]=1;
			role.bluekey ++; 
		}//蓝门 
		else if(map[i][j-1]==2&&role.bluekey >0)
		{
			role.bluekey --; 
			map[i][j-1]=15;
			map[i][j]=1;
		} 
		//黄钥匙 
		else if(map[i][j-1]==5)
		{
			map[i][j-1]=15;
			map[i][j]=1;
			role.yellowkey  ++; 
		}//黄门 
		else if(map[i][j-1]==3&&role.yellowkey  >0)
		{
			role.yellowkey  --; 
			map[i][j-1]=15;
			map[i][j]=1;
		} 
		//蝙蝠
		else if(map[i][j]==10)
		{
			int ID=MessageBox(hwnd,"遇到蝙蝠","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(bat)==true)
				{
					map[i][j]=1;
					map[i][j-1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		//法师
		else if(map[i][j]==18)
		{
			int ID=MessageBox(hwnd,"遇到法师","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(master)==true)
				{
					map[i][j]=1;
					map[i][j-1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		//骷髅 
		else if(map[i][j]==11)
		{
			int ID=MessageBox(hwnd,"遇到骷髅","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(kulou)==true)
				{
					map[i][j]=1;
					map[i][j-1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		else if(map[i][j]==16)
		void drawMap2(); 
		break;
		//右
		case'D':
		case'd':
		case 77:
		if(map[i][j+1]==1)
		{
			map[i][j]=1;
			map[i][j+1]=15; 
		 } 
		else if(map[i][j+1]==4)
		{
			map[i][j+1]=15;
			map[i][j]=1;
			role.bluekey ++; 
		}
		else if(map[i][j+1]==2&&role.bluekey >0)
		{
			role.bluekey --; 
			map[i][j+1]=15;
			map[i][j]=1;
		} 
		else if(map[i][j+1]==5)
		{
			map[i][j+1]=15;
			map[i][j]=1;
			role.yellowkey ++; 
		}
		else if(map[i][j+1]==3&&role.yellowkey >0)
		{
			role.yellowkey --; 
			map[i][j+1]=15;
			map[i][j]=1;
		} 
		else if(map[i][j]==10)
		{
			int ID=MessageBox(hwnd,"遇到蝙蝠","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				if(bloodPK(bat)==true)
				{
					map[i][j]=1;
					map[i][j+1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		else if(map[i][j]==18)
		{
			int ID=MessageBox(hwnd,"遇到法师","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(master)==true)
				{
					map[i][j]=1;
					map[i][j+1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		else if(map[i][j]==11)
		{
			int ID=MessageBox(hwnd,"遇到骷髅","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(kulou)==true)
				{
					map[i][j]=1;
					map[i][j+1]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		else if(map[i][j]==16)
		void drawMap2();
		break;
		//上 
		case'W':
		case'w':
		case 72:
		//要走的地方是空地可走
		if(map[i-1][j]==1)
		{
			map[i][j]=1;
			map[i-1][j]=15; 
		 } 
		 //钥匙 
		else if(map[i-1][j]==4)
		{
			map[i-1][j]=15;
			map[i][j]=1;
			role.bluekey ++; 
		}
		else if(map[i-1][j]==2&&role.bluekey >0)
		{
			role.bluekey --; 
			map[i-1][j]=15;
			map[i][j]=1;
		} 
		else if(map[i-1][j]==5)
		{
			map[i-1][j]=15;
			map[i][j]=1;
			role.yellowkey  ++; 
		}
		else if(map[i-1][j]==3&&role.yellowkey  >0)
		{
			role.yellowkey --; 
			map[i-1][j]=15;
			map[i][j]=1;
		} 
		//蝙蝠
		else if(map[i][j]==10)
		{
			int ID=MessageBox(hwnd,"遇到蝙蝠","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(bat)==true)
				{
					map[i][j]=1;
					map[i-1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		//法师
		else if(map[i][j]==18)
		{
			int ID=MessageBox(hwnd,"遇到法师","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(master)==true)
				{
					map[i][j]=1;
					map[i-1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		else if(map[i][j]==11)
		{
			int ID=MessageBox(hwnd,"遇到骷髅","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(kulou)==true)
				{
					map[i][j]=1;
					map[i-1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		else if(map[i][j]==16)
		void drawMap2();
		break;
		//下 
		case'S':
		case's':
		case 80:
		//要走的地方是空地可走
		if(map[i+1][j]==1)
		{
			map[i][j]=1;
			map[i+1][j]=15; 
		 } 
		 //钥匙 
		else if(map[i+1][j]==4)
		{
			map[i+1][j]=15;
			map[i][j]=1;
			role.bluekey ++; 
		}
		else if(map[i+1][j]==2&&role.bluekey >0)
		{
			role.bluekey --; 
			map[i+1][j]=15;
			map[i][j]=1;
		} 
		else if(map[i+1][j]==5)
		{
			map[i+1][j]=15;
			map[i][j]=1;
			role.yellowkey ++; 
		}
		else if(map[i+1][j]==3&&role.yellowkey >0)
		{
			role.yellowkey --; 
			map[i+1][j]=15;
			map[i][j]=1;
		} 
		//蝙蝠
		else if(map[i][j]==10)
		{
			int ID=MessageBox(hwnd,"遇到蝙蝠","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(bat)==true)
				{
					map[i][j]=1;
					map[i+1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		//法师
		else if(map[i][j]==18)
		{
			int ID=MessageBox(hwnd,"遇到法师","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(master)==true)
				{
					map[i][j]=1;
					map[i+1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		} 
		else if(map[i][j]==11)
		{
			int ID=MessageBox(hwnd,"遇到骷髅","是否攻击",MB_YESNO);
			if(IO==IDYESS)
			{
				//怪物的处理   PK处理
				if(bloodPK(kulou)==true)
				{
					map[i][j]=1;
					map[i+1][j]=15;
				}
				else
				{
					MessageBox(hwnd,"你阵亡了","是否复活"，MB_YESSNO);
				}
			}
		}
		else if(map[i][j]==16)
		void drawMap2(); 
		break;
	}
}
void read()
{
    FILE* fp = fopen("存档.dat","rb");
    if(fp != NULL){
        fscanf(fp,"%d%d%d%d%d%d%d%d",&role.blood ,&role.attack ,&role.bluekey ,&role.defense ,&role.experience ,&role.grade ,&role.quantity ,&role.yellowkey );
        fclose(fp);
    }else{
        printf("文件不存在！\n");
        exit(1);
    }
}
int main()
{
	inputRoleName();
	loadResouece();
	hwnd=initgraph(60*14,60*13);
	void read();
	while(1)
	{
		drawMap();
		keyDown();
	}
	closegraph();
	return 0;
}
